@using HorasExtra.Blazor.PagesServices
@using HorasExtra.Application.ViewModels

@page "/horas/cadastrar"
@page "/horas/cadastrar/{id}"

@attribute [Authorize]

@inject HorasPageService HorasPageService
@inject NavigationManager NavigationManager
@inject UsuarioPageService UsuarioPageService

<h1>Apontamento de Horas</h1>

<EditForm OnValidSubmit="@ValidSubmit" OnInvalidSubmit="@InvalidSubmit" Model="@request">
    <div class="form-group">
        <label>Desenvolvedor</label>
        <InputText id="desenvolvedor" class="form-control" @bind-Value="request.Desenvolvedor" disabled="disabled" />
    </div>

    <div class="form-row">
        <div class="form-group col-md-4">
            <label>Data</label>
            <InputDate id="data" class="form-control" @bind-Value="request.Data" />
        </div>
        <div class="form-group col-md-4">
            <label>Hora Inicio</label>
            <InputSelect id="horaInicio" @bind-Value="request.HoraInicio" class="form-control">
                <option value="">Selecione</option>
                <option value="00:00">00:00</option>
                <option value="00:30">00:30</option>
                <option value="01:00">01:00</option>
                <option value="01:30">01:30</option>
                <option value="02:00">02:00</option>
                <option value="02:30">02:30</option>
                <option value="03:00">03:00</option>
                <option value="03:30">03:30</option>
                <option value="04:00">04:00</option>
                <option value="04:30">04:30</option>
                <option value="05:00">05:00</option>
                <option value="05:30">05:30</option>
                <option value="06:00">06:00</option>
                <option value="06:30">06:30</option>
                <option value="07:00">07:00</option>
                <option value="07:30">07:30</option>
                <option value="08:00">08:00</option>
                <option value="08:30">08:30</option>
                <option value="09:00">09:00</option>
                <option value="09:30">09:30</option>
                <option value="10:00">10:00</option>
                <option value="10:30">10:30</option>
                <option value="11:00">11:00</option>
                <option value="11:30">11:30</option>
                <option value="12:00">12:00</option>
                <option value="12:30">12:30</option>
                <option value="13:00">13:00</option>
                <option value="13:30">13:30</option>
                <option value="14:00">14:00</option>
                <option value="14:30">14:30</option>
                <option value="15:00">15:00</option>
                <option value="15:30">15:30</option>
                <option value="16:00">16:00</option>
                <option value="16:30">16:30</option>
                <option value="17:00">17:00</option>
                <option value="17:30">17:30</option>
                <option value="18:00">18:00</option>
                <option value="18:30">18:30</option>
                <option value="19:00">19:00</option>
                <option value="19:30">19:30</option>
                <option value="20:00">20:00</option>
                <option value="20:30">20:30</option>
                <option value="21:00">21:00</option>
                <option value="21:30">21:30</option>
                <option value="22:00">22:00</option>
                <option value="22:30">22:30</option>
                <option value="23:00">23:00</option>
                <option value="23:30">23:30</option>
                <option value="23:59">23:59</option>
            </InputSelect>
        </div>
        <div class="form-group col-md-4">
            <label>Hora Fim</label>
            <InputSelect id="horaFim" @bind-Value="request.HoraFim" class="form-control">
                <option value="">Selecione</option>
                <option value="00:00">00:00</option>
                <option value="00:30">00:30</option>
                <option value="01:00">01:00</option>
                <option value="01:30">01:30</option>
                <option value="02:00">02:00</option>
                <option value="02:30">02:30</option>
                <option value="03:00">03:00</option>
                <option value="03:30">03:30</option>
                <option value="04:00">04:00</option>
                <option value="04:30">04:30</option>
                <option value="05:00">05:00</option>
                <option value="05:30">05:30</option>
                <option value="06:00">06:00</option>
                <option value="06:30">06:30</option>
                <option value="07:00">07:00</option>
                <option value="07:30">07:30</option>
                <option value="08:00">08:00</option>
                <option value="08:30">08:30</option>
                <option value="09:00">09:00</option>
                <option value="09:30">09:30</option>
                <option value="10:00">10:00</option>
                <option value="10:30">10:30</option>
                <option value="11:00">11:00</option>
                <option value="11:30">11:30</option>
                <option value="12:00">12:00</option>
                <option value="12:30">12:30</option>
                <option value="13:00">13:00</option>
                <option value="13:30">13:30</option>
                <option value="14:00">14:00</option>
                <option value="14:30">14:30</option>
                <option value="15:00">15:00</option>
                <option value="15:30">15:30</option>
                <option value="16:00">16:00</option>
                <option value="16:30">16:30</option>
                <option value="17:00">17:00</option>
                <option value="17:30">17:30</option>
                <option value="18:00">18:00</option>
                <option value="18:30">18:30</option>
                <option value="19:00">19:00</option>
                <option value="19:30">19:30</option>
                <option value="20:00">20:00</option>
                <option value="20:30">20:30</option>
                <option value="21:00">21:00</option>
                <option value="21:30">21:30</option>
                <option value="22:00">22:00</option>
                <option value="22:30">22:30</option>
                <option value="23:00">23:00</option>
                <option value="23:30">23:30</option>
                <option value="23:59">23:59</option>
            </InputSelect>
        </div>
    </div>

    @if (carregando)
    {
        <button class="btn btn-primary" disabled="disabled">Salvando...</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary" @onclick="ClickSalvar">Salvar</button>
    }

    &nbsp;<a href="/horas" class="btn btn-danger">Voltar</a>

    <DataAnnotationsValidator />

    @if (!formularioValido)
    {
        <div class="alert alert-danger top-15" role="alert">
            <ValidationSummary />
        </div>
    }
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private System.Security.Claims.ClaimsPrincipal claimsPrincipal;
    private bool formularioValido = true;
    private bool formularioSubmetido = false;
    private bool carregando = false;
    private HorasCadastrarRequestViewModel request = new HorasCadastrarRequestViewModel();

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(id))
        {
            request.Data = DateTime.Now;
        }
        else
        {
            HorasObterResponseViewModel response = HorasPageService.Obter(id);
            request.Id = response.Id;
            request.Desenvolvedor = response.Desenvolvedor;
            request.Data = response.Data;
            request.HoraInicio = response.HoraInicio;
            request.HoraFim = response.HoraFim;
        }

        base.OnInitialized();
    }

    protected async override void OnParametersSet()
    {
        if (authenticationState != null)
        {
            claimsPrincipal = (await authenticationState).User;
            request.Desenvolvedor = claimsPrincipal.Identity.Name;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        SetFormulatioValido(true);
        base.OnAfterRender(firstRender);
    }

    private void SetFormulatioSubmetido()
    {
        formularioSubmetido = true;
    }

    private void SetFormulatioValido(bool valor)
    {
        formularioValido = valor;
    }

    private void SetCarregando(bool valor)
    {
        carregando = valor;
    }

    private void ValidSubmit()
    {
        SetFormulatioValido(true);
        SetFormulatioSubmetido();

        if (string.IsNullOrEmpty(request.Id))
        {
            HorasPageService.Adicionar(request);
        }
        else
        {
            HorasPageService.Editar(request);
        }

        SetCarregando(false);
        NavigationManager.NavigateTo("/horas");
    }

    private void InvalidSubmit()
    {
        SetFormulatioSubmetido();
        SetFormulatioValido(false);
        SetCarregando(false);
    }

    private void ClickSalvar()
    {
        SetCarregando(true);
    }
}
